// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview Password strength checker AI agent.
 *
 * - checkPasswordStrength - A function that handles the password strength checking process.
 * - PasswordStrengthInput - The input type for the checkPasswordStrength function.
 * - PasswordStrengthOutput - The return type for the checkPasswordStrength function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PasswordStrengthInputSchema = z.object({
  password: z.string().describe('The password to check.'),
});
export type PasswordStrengthInput = z.infer<typeof PasswordStrengthInputSchema>;

const PasswordStrengthOutputSchema = z.object({
  strength: z.string().describe('The strength of the password (e.g., weak, moderate, strong).'),
  reason: z.string().describe('The reasons why the password has the given strength.'),
  suggestions: z.string().describe('Suggestions for improving the password strength.'),
});
export type PasswordStrengthOutput = z.infer<typeof PasswordStrengthOutputSchema>;

export async function checkPasswordStrength(input: PasswordStrengthInput): Promise<PasswordStrengthOutput> {
  return checkPasswordStrengthFlow(input);
}

const prompt = ai.definePrompt({
  name: 'passwordStrengthPrompt',
  input: {schema: PasswordStrengthInputSchema},
  output: {schema: PasswordStrengthOutputSchema},
  prompt: `You are a password expert specializing in password security.

You will be given a password and must assess its strength, and provide a reason for why it has the given strength.

You will also provide suggestions on how to improve the password strength.

Password: {{{password}}}`,
});

const checkPasswordStrengthFlow = ai.defineFlow(
  {
    name: 'checkPasswordStrengthFlow',
    inputSchema: PasswordStrengthInputSchema,
    outputSchema: PasswordStrengthOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
